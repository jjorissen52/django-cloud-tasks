"""
Django settings for example_app project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from .utils import get_runtime_parameters

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# ensure 'tasks' is available on path (without having to run install command)
sys.path.insert(0, os.path.join(os.path.dirname(BASE_DIR)))

environment_defaults = {
    # these should all be strings.
    "DEBUG": "1",
    "SECRET_KEY": '48%dgfbwyt0v4!zjig^2vtppx9+^$ra=b9@9$*s1(zmvks9pgu',
    "DATABASE_NAME": "postgres",
    "DATABASE_USER": "postgres",
    "DATABASE_PASSWORD": "superstrongpassword123",
    "DATABASE_HOST": "127.0.0.1",
    "DATABASE_PORT": "5432",
    "ALLOWED_HOSTS": ["*"],
    "TASKS_REGION": "us-central1",
    "TASKS_PROJECT_ID": "best-project",
    "TASKS_SERVICE": 'default',
    "TASKS_ROOT_URL": "http://localhost:8000" # not reachable from cloud provider
}
ENV = get_runtime_parameters(environment_defaults)

# Pull settings from environment
SECRET_KEY = ENV.SECRET_KEY
DEBUG = ENV.DEBUG
ALLOWED_HOSTS = ENV.ALLOWED_HOSTS

TASKS_REGION = ENV.TASKS_REGION
TASKS_PROJECT_ID = ENV.TASKS_PROJECT_ID
TASKS_SERVICE = ENV.TASKS_SERVICE
TASKS_ROOT_URL = ENV.TASKS_ROOT_URL

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'tasks',
    'rest_framework',
    'django_extensions',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'example_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'example_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': ENV.DATABASE_NAME,
        'USER': ENV.DATABASE_USER,
        'PASSWORD': ENV.DATABASE_PASSWORD,
        'HOST': ENV.DATABASE_HOST,
        'PORT': ENV.DATABASE_PORT,
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
